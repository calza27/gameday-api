AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: gameday-api > Public API processing to serve GameDay data export

Parameters:
  VpcId:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /network/vpc-id
  SubnetIds:
    Type: AWS::SSM::Parameter::Value<List<String>>
    Default: /network/appSubnets

Globals:
  Function:
    Handler: bootstrap
    Runtime: provided.al2
    Timeout: 300
    MemorySize: 256
    AutoPublishAlias: live
    VpcConfig:
        SecurityGroupIds:
          - !Ref SecurityGroup
        SubnetIds: !Ref SubnetIds
      
Resources:
  StorageBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: gameday-export-bucket

  BucketNameParam:
    Type: AWS::SSM::Parameter
    Properties:
      Name: '/gameday-api-processor/s3/name'
      Type: String
      Value: !Ref StorageBucket
      Description: Name of the S3 bucket to store exports in
  
  ExportDatabase:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: GameDay_Exports
      AttributeDefinitions: 
        - AttributeName: id
          AttributeType: S
      KeySchema: 
        - AttributeName: id
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST

  DatabaseNameParam:
    Type: AWS::SSM::Parameter
    Properties:
      Name: '/gameday-api-processor/ddb/name'
      Type: String
      Value: !Ref ExportDatabase
      Description: Name of the DynamoDB dabase that export information is stored in

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for api-processors
      VpcId: !Ref VpcId
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
          Description: Allow all traffic on port 443

  FunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Description: Lambda role for api-processors
      Path: /
      Policies:
        - PolicyName: logs-policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:PutLogEvents
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                Resource:
                  - arn:aws:logs:*:*:*
        - PolicyName: network-access-policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - ec2:DescribeNetworkInterfaces
                  - ec2:CreateNetworkInterface
                  - ec2:DeleteNetworkInterface
                Resource:
                  - '*'
        - PolicyName: bucket-access-policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:ListBucket
                  - s3:DeleteObject
                Resource:
                  - !GetAtt StorageBucket.Arn
        - PolicyName: dynamoDB-access-policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:GetItem
                  - dynamodb:PutItem
                  - dynamodb:Scan
                  - dynamodb:Query
                Resource:
                  - !GetAtt ExportDatabase.Arn
        - PolicyName: ssm-access-policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - ssm:GetParameter
                Resource:
                  - "*"

  # ExportFunc:
  #   Type: AWS::Serverless::Function
  #   Properties:
  #     FunctionName: 'gameday-api-processor-export'
  #     CodeUri: ./cmd/bin/export
  #     Role:
  #       !GetAtt FunctionRole.Arn

  # ExportFuncLogGroup:
  #   Type: AWS::Logs::LogGroup
  #   Properties:
  #     LogGroupName: !Sub "/aws/lambda/${ExportFunc}"
  #     RetentionInDays: 365

  # ExportFuncArnParam:
  #   Type: AWS::SSM::Parameter
  #   Properties:
  #     Name: '/gameday-api-processor/function/export/arn'
  #     Type: String
  #     Value: !Sub '${ExportFunc.Arn}'
  #     Description: ARN for the Export function handler

  ListFunc:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: 'gameday-api-processor-list'
      CodeUri: ./cmd/bin/list
      Role:
        !GetAtt FunctionRole.Arn

  ListFuncLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${ListFunc}"
      RetentionInDays: 365

  ListFuncArnParam:
    Type: AWS::SSM::Parameter
    Properties:
      Name: '/gameday-api-processor/function/list/arn'
      Type: String
      Value: !Sub '${ListFunc.Arn}'
      Description: ARN for the List function handler

  GetGameFunc:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: 'gameday-api-processor-getGame'
      CodeUri: ./cmd/bin/getGame
      Role:
        !GetAtt FunctionRole.Arn

  GetGameFuncLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${GetGameFunc}"
      RetentionInDays: 365

  GetGameFuncArnParam:
    Type: AWS::SSM::Parameter
    Properties:
      Name: '/gameday-api-processor/function/getGame/arn'
      Type: String
      Value: !Sub '${GetGameFunc.Arn}'
      Description: ARN for the Get Game function handler

  # GetFileUrlFunc:
  #   Type: AWS::Serverless::Function
  #   Properties:
  #     FunctionName: 'gameday-api-processor-getFileUrl'
  #     CodeUri: ./cmd/bin/getFileUrl
  #     Role:
  #       !GetAtt FunctionRole.Arn

  # GetFileUrlFuncLogGroup:
  #   Type: AWS::Logs::LogGroup
  #   Properties:
  #     LogGroupName: !Sub "/aws/lambda/${GetFileUrlFunc}"
  #     RetentionInDays: 365

  # GetFileUrlFuncArnParam:
  #   Type: AWS::SSM::Parameter
  #   Properties:
  #     Name: '/gameday-api-processor/function/getFileUrl/arn'
  #     Type: String
  #     Value: !Sub '${GetFileUrlFunc.Arn}'
  #     Description: ARN for the Get File URL function handler