openapi: 3.0.0
x-explorer-enabled: false
security: []
info:
  title: GameDay API
  description: "A REST interface to manage GameDay related operations"
  contact: {}
  version: "1.0"
servers:
  - url: https://api.gameday.com/api
    description: GameDay dev server
x-amazon-apigateway-request-validators:
  basic:
    validateRequestBody: true
    validateRequestParameters: true
x-amazon-apigateway-gateway-responses:
  BAD_REQUEST_BODY:
    statusCode: "400"
    responseTemplates:
      application/json: '{ "errors": [ { "detail": "$context.error.message: $context.error.validationErrorString" } ] }'
    responseParameters:
      gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
      gatewayresponse.header.Cache-Control: "'no-store'"
      gatewayresponse.header.Content-Security-Policy: "'frame-ancestors 'none''"
      gatewayresponse.header.Strict-Transport-Security: "'max-age=31536000; includeSubDomains'"
      gatewayresponse.header.X-FRAME-OPTIONS: "'DENY'"
      gatewayresponse.header.X-Content-Type-Options: "'nosniff'"
  ACCESS_DENIED:
    statusCode: "403"
    responseTemplates:
      application/json: '{ "errors": [ { "detail": "Not authorized to access this resource" } ] }'
    responseParameters:
      gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
      gatewayresponse.header.Cache-Control: "'no-store'"
      gatewayresponse.header.Content-Security-Policy: "'frame-ancestors 'none''"
      gatewayresponse.header.Strict-Transport-Security: "'max-age=31536000; includeSubDomains'"
      gatewayresponse.header.X-FRAME-OPTIONS: "'DENY'"
      gatewayresponse.header.X-Content-Type-Options: "'nosniff'"
paths:
  # /gameday/export:
  #   put:
  #     summary: Export the data to a file
  #     description: "Export the data to a file"
  #     operationId: export
  #     requestBody:
  #       content:
  #         application/json:
  #           schema:
  #             $ref: "#/components/schemas/gameData"
  #       required: true
  #     responses:
  #       "201":
  #         description: "Success"
  #       "500":
  #         $ref: "#/components/responses/InternalServerError"
  #     deprecated: false
  #     x-amazon-apigateway-request-validator: "basic"
  #     x-amazon-apigateway-integration:
  #       httpMethod: "POST"
  #       type: "aws_proxy"
  #       uri:
  #         Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/{{resolve:ssm:/gameday-api-processor/function/export/arn}}:live/invocations"
  /gameday/list:
    get:
      summary: List the previously exported games
      description: "List the previously exported games"
      operationId: list
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/exportedGame"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
      deprecated: false
      x-amazon-apigateway-request-validator: "basic"
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        type: "aws_proxy"
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/{{resolve:ssm:/gameday-api-processor/function/list/arn}}:live/invocations"
  # /gameday/get/{id}:
  #   get:
  #     summary: Get a previously exported game by Id
  #     description: "Get a previously exported game by Id"
  #     operationId: getGame
  #     parameters:
  #       - name: id
  #         in: path
  #         description: the id of the exported game to get
  #         required: true
  #         schema:
  #           type: string
  #           format: uuid
  #     responses:
  #       "200":
  #         description: "Success"
  #         content:
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/exportedGame"
  #       "404":
  #         $ref: "#/components/responses/NotFound"
  #       "500":
  #         $ref: "#/components/responses/InternalServerError"
  #     deprecated: false
  #     x-amazon-apigateway-request-validator: "basic"
  #     x-amazon-apigateway-integration:
  #       httpMethod: "POST"
  #       type: "aws_proxy"
  #       uri:
  #         Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/{{resolve:ssm:/gameday-api-processor/function/getGame/arn}}:live/invocations"
  # /gameday/getFileUrl/{file}:
  #   get:
  #     summary: Get the URL to access the file for the given file name
  #     description: "Get the URL to access the file for the given file name"
  #     operationId: getFileUrl
  #     parameters:
  #       - name: file
  #         in: path
  #         description: the name of the file to get the access URL for
  #         required: true
  #         schema:
  #           type: string
  #     responses:
  #       "200":
  #         description: "Success"
  #         content:
  #           application/json:
  #             schema:
  #               type: string
  #       "404":
  #         $ref: "#/components/responses/NotFound"
  #       "500":
  #         $ref: "#/components/responses/InternalServerError"
  #     deprecated: false
  #     x-amazon-apigateway-request-validator: "basic"
  #     x-amazon-apigateway-integration:
  #       httpMethod: "POST"
  #       type: "aws_proxy"
  #       uri:
  #         Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/{{resolve:ssm:/gameday-api-processor/function/getFileUrl/arn}}:live/invocations"
components:
  responses:
    NoContent:
      description: "No Content"
    BadRequest:
      description: "Bad Request"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/error"
    NotFound:
      description: "Not Found"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/error"
    Conflict:
      description: "Conflict"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/error"
    Unauthorized:
      description: "Unauthorized"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/error"
    Forbidden:
      description: "Forbidden"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/error"
    InternalServerError:
      description: "Internal Server Error"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/error"
  schemas:
    error:
      type: object
      properties:
        status:
          type: integer
          description: the HTTP status code
          example: 400
        message:
          type: string
          description: a human readable message
          example: "An error occured during [x]"
    gameData:
      title: GameData
      type: object
      properties:
        Id:
          type: string
        GameDate:
          type: string
          format: date
        Competition:
          type: string
        TeamA:
          type: string
        TeamAAbbr:
          type: string
        Venue:
          type: string
        TeamB:
          type: string
        TeamBAbbr:
          type: string
        Level:
          type: string
        Round:
          type: string
        TeamAPlayers:
          type: array
          items:
            $ref: "#/components/schemas/player"
        ScoringEvents:
          type: array
          items:
            $ref: "#/components/schemas/scoringEvent"
        QuarterTimes:
          type: array
          items:
            $ref: "#/components/schemas/quarterTime"
        AppStorage:
          type: array
          items:
            $ref: "#/components/schemas/appStorage"
    player:
      title: Player
      type: object
      properties:
        Id:
          type: string
        Surname:
          type: string
        GivenName:
          type: string
        Number:
          type: number
    scoringEvent:
      title: Scoring Event
      properties:
        Id:
          type: string
        Quarter:
          type: number
        Team:
          type: string
        ScoreEvent:
          type: string
        GoalScorer:
          type: string
        ScoreType:
          type: string
        HCWorm:
          type: number
        LauncherNumber:
          type: number
        TypeNumber:
          type: number
        OpWorm:
          type: number
    quarterTime:
      title: Quarter Time
      properties:
        Id:
          type: string
        Quarter:
          type: number
        Time:
          type: string
    appStorage:
      title: App Storage
      properties:
        DataType:
          type: string
        Data:
          type: array
          items:
            type: number
    exportedGame:
      title: Exported Game
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        pdfFile:
          type: string
        csvFile:
          type: string